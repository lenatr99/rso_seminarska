 We present a technical platform that allows us to monitor and measure cortex and membrane dynamics during bleb-based chemotaxis. Using D. discoideum cells expressing LifeAct-GFP and crawling under agarose containing RITC-dextran, we were able to simultaneously visualize the actin cortex and the cell membrane throughout bleb formation. Using these images, we then applied edge detect to generate points on the cell boundary with coordinates in a coordinate plane. Then we fitted these points to a curve with known x and y coordinate functions. The result was to parameterize the cell outline. With the parameterization, we demonstrate how to compute data for geometric features such as cell area, bleb area and edge curvature. This allows us to collect vital data for the analysis of blebbing. 1 Introduction Cells must modify their motile behavior when encountering varying conditions. They must travel through multiple environments as they participate in a variety of biological phenomena including foraging for food, embryogenesis, development, wound healing, immune response, and cancer metastasis. There are two distinct modes of motility cells utilize depending on their environment,. When crawling on top of a substrate with limited resistance to movement, a two dimensional environment, cells use filopodia, lamellipodia, or pseudopodia as their main mode of motility where actin is continuously cycled to the front of the cell, pushing the cell’s membrane forward in the direction of movement. When crawling through a substrate or between cells where resistance is higher, a three dimensional environment, cells use blebs as their main mode of motility. During bleb-based motility, the front of the cell makes a series of blister-like protrusions in the direction of movement where the cell’s membrane detaches from the actin cortex. This is driven in part by the increased intracellular pressure associated with moving through a three dimensional environment. A variety of cell types have been shown to utilize bleb-based motility in three dimensional environments: skeletal muscle stem cells, zebrafish primordial germ cells, cancer cells, Entamoeba histolytica and Dictyostelium discoideum,,,,, and. The formation of a bleb follows three general steps with distinct membrane and cortex characteristics : 1) the membrane detaches from the cortex, making a blister-like protrusion at the cell front; 2) the new cortex begins forming at the new position of the membrane while the original cortex behind the detachment begins to disassemble; and 3) the original cortex vanishes where the new cortex is fully assembled and associated with the membrane. Fig 1 Bleb formation can be identified by cortex-to-membrane positioning. In recent years, several researchers have studied bleb formation from different points of view. In, Charras et al. collected biophysical data from the cell during blebbing, leading them to conclude that the blebbing process is the result of pressure changes. They proposed a model for bleb nucleation. However, these conditions were necessary but not sufficient. Using classical geometric constructs, Wooley et al. modelled bleb development and were able to explain several bleb shapes that occur in nature. Guy and Strychalsky, considered the same process from the point of view of computational fluid dynamics. By simulating the fluid flows, they were able to include secondary blebbing in their model. Zatulovskiy, Tyson, Bretschneider, and Kay visualized the cortex and membrane dynamics during bleb formation in D. discoideum using an under agarose assay and introduced differential geometry via membrane/cortex curvature to the process. They showed that curvature does play a role as bleb location is biased toward areas of negative curvature. However, it is apparent from this work that there are other factors at play. Collier et al. proposed that cell surface energy may help predict bleb nucleation sites, and that membrane curvature is only one factor in the cell surface energy calculations. This is in keeping with, where the authors correlate the presence of Myosin-II with bleb formation. There are several proposed mechanisms necessary for bleb formation. However, these do not fully explain directional bleb-based motility. Blebs appear as a consequence of the three dimensional environmental force transferred to increased hydrostatic force on the cortex/membrane complex. The central question is why the blebs appear on the anterior face leading to coordinated cell movement. Even if blebs tend to occur at sites of negative curvature and or high surface energy, these do not explain why blebs are more likely on the anterior face. Indeed, there are negative curvature segments and high energy locations throughout the cell boundary. In order to collect the data needed to address this conundrum, large numbers of blebbing cells need to be imaged at high enough resolution to visualize cortex and membrane structures. In addition, these images need to be analyzed to accurately measure and quantify membrane curvature and bleb size throughout bleb-based motility. In this letter, we describe the technical procedures permitting us to collect images of the cortex and membrane during blebbing as well as the automated computer application that approximates the cell boundary with a B-spline and measures curvature, allowing for a high throughput geometric analysis of blebbing during chemotaxis. This letter is organized as follows. In the Materials and Methods, we state in turn, cell preparation, microscopy procedures, edge detection and geometric modeling functions. In the Results, we apply the methods to D. discoideum. In particular, we produce a parametrized representation of the cell boundary. We then proceed to show some applications of our methods. We conclude by tabulating blebs by edge curvature. Additionally, we include videos of the cells we used for our study. In S1 Appendix, we include a mathematical result that justifies our choice of parameterization procedure. In the Discussion and Conclusion, we reflect on what has been done and the importance of this work. 2 Materials and methods 2.1 Cell preparation 2.1.1 Strain and culture conditions All D. discoideum cells were grown axenically by shaking culture in HL5 nutrient medium with glucose and supplemented with 100 IU/mL penicillin and 100 μ g/mL streptomycin at 150 rpm at 22°C. To visualize F-actin dynamics in wild-type cells, the Ax2 strain was used. Wild-type cells were transformed with the LifeAct-GFP plasmid, a generous gift from Dr. Chang-Hoon Choi, University of California. To make the construct, the LifeAct-GFP sequence was amplified by PCR using the following primers: LifeAct - F, 5 ′ - AAAAGATCTAAAAAATGGGTGTCGCAGATTTG - 3 ′ and LifeAct - R 2, 5 ′ - TTTCTCGAGTTAAGCGCCTGTGCTATG - 3 ′. The amplified LifeAct-GFP sequence was cloned into the BglII and XhoI sites of the EXP5 vector containing a neomycin-resistant cassette by electroporation as previously described. Transformed cells were selected in HL5 media supplemented with 4 − 20 μ g/mL G418. Individual clones were isolated on GYP plates containing 4-20 μg/ml G418 on Br/1 bacteria. Clones were chosen for imaging based on similarity to F-actin LifeAct-GFP fluorescence labeling found in previous work in D.discoideum. To make the cells competent for cAMP chemotaxis, 1 × 10 7 log phase Ax2 LifeAct-GFP expressing cells were collected and washed in PBM three times as previously described. The cells were resuspended in 1 mL PBM and plated at 22°C on a 0.8 μ m pore size, 47mm in diameter nitrocellulose filter pad on top of two 6 μ m pore size, 125mm in diameter Whitman paper filter pads that were pre-moistened with PBM. After 5 to 6 hrs, the starving cells were removed and suspended in 1mL PBM. 2.1.2 cAMP under agarose assays Two types of cAMP under agarose assays were used: 1) to visualize membrane and cortex positions and 2) to visualize bleb progression after nucleation. To visualize membrane and cortex positions in bleb-based motility in response to cAMP chemotaxis, an under agarose assay developed by Zatulovskiy, Tyson, Bretschneider, and Kay was used with the following modifications. A preheated number 1 German borosilicate sterile 2 well chambered coverglass slide was loaded with 750 μ L of melted 0.5% or 0.7% Omnipur agarose laced with 1mg/mL of 70,000 MW Rhodamine B isothiocyanate-Dextran. Once solidified, half of the gel was removed from the well and the remaining portion was slid across to the middle of the chamber, creating two wells with one on each side of the gel. To create the cAMP gradient, 4 μ M cAMP was loaded into one well and incubated for 40 minutes. 1 × 10 5 to 2 × 10 5 cells competent for cAMP chemotaxis were loaded into the other well and allowed to settle and crawl under the agarose for 30 minutes prior to imaging. To visualize bleb progress after nucleation, the same cAMP under agarose assay to visualize membrane and cortex positions was used; however, no RITC-Dextran was added to the agarose gel. 2.2 Imaging and microscopy 2.2.1 Live imaging and microscopy All imaging data were acquired using a Leica DMI-4000B inverted microscope mounted on a TMC isolation platform with a Yokogawa CSU 10 spinning disc head and Hamamatsu C9100-13 ImagEM EMCCD camera with diode lasers of 491 nm, 561nm, and 638 nm. LifeAct-GFP and RITC-Dextran were excited using the 491nm and 561nm lasers, respectively. Images were taken over the course of 30 seconds using 80x magnification or a 100x/1.44 oil immersion objective at maximum camera speed with exposure times of 0.800 seconds for GFP and 0.122 seconds for RITC channels, resulting in intervals of 1.66 seconds for the visualizing membrane-to-cortex position assays and intervals of 0.800 seconds for the bleb progression assays as only the GFP channel was needed. Images were acquired using Volocity 5.3.3 and processed in ImageJ only for intensity plot analysis. 2.2.2 Intensity plots to determine cortex and membrane positions ImageJ signal intensity plots were used to confirm positions of the membrane and cortex in all steps in bleb formation. Frames acquired from both channels were put together in a single stack where a line was drawn across the middle of the putative bleb. The line was drawn starting from the cytoplasm just prior to the cortex and extending past the bleb in question. From ImageJ, the Plot Profile feature was used to generate an intensity plot for each frame in the stack. 2.3 Data conversion—Microscopy to Cartesian coordinates Data conversion was implemented using Mathematica standard library, image processing functions. The goal was to convert digital microscopy output into Cartesian coordinates. 2.3.1 Mathematica image processing functions The Mathematica functions we use for image processing are as listed. ImageTake was used to clip the image to eliminate extraneous neighboring objects. The parameter setting depended on the location of the desired image in the field of view. FillingTransform was used to remove small isolated black areas in the field of view. This function blended these with neighboring gray areas to form a more uniformly gray area. ImageAdjust scaled the brightness of the image to the unit interval. Blur is a standard computer graphics procedure that modified pixel values by interpolating values at neighboring pixels. Binarize created a bi-chromatic, black background, white central feature. The threshold parameter used to distinguish between gray levels was set in the range 0.09 to 0.21. The choice of parameter depended on the sharpness of the microscopy output. For sharp images, we used values near 0.1. For fuzzy images, values near 0.17 to 0.21 removed the spurious output. DeleteSmallCompnents corrected for anomalies in the Binarize output, small connected components of white within the black or vice-versa. The connected components were identified using cluster variance maximization or Otsu’s algorithm. EdgeDectect identified the edge of interest from the bi-chromatric image. This function implemented the Canny algorithm. PixelValuePositions produced the cell boundary in Cartesian coordinates. FindShortestTour transformed the list produced by PixelValuePositions into an ordered circuit. 2.4 Geometric functions 2.4.1 Parameterizing the cell boundary We transition now to the mathematics. Given a planar object and set of points on the boundary, B i, i = 1, …, n, the procedure arrives at a parameterized representation of the object. All other geometric functions will be built from this representation of the object. A cubic B-spline is determined by guide points, B i, i = 1, …, n and cubic basis functions, β 1 = 1 6, β 2 = 1 6, β 3 = 1 6, β 4 = 1 6. The resulting interpolating curve is given in segments. Each segment is determined by four of the guide points. The equation for the i th segment uses guide points B i, B i +1, B i +2, B i +3. σ i = ∑ j = 0 3 β j + 1 B i + j, i = 1,..., n - 4 and 0 ≤ t ≤ 1. If the points lie on a curve, then the B-spline is a parameterized approximation of the curve. This representation has the advantage that it has a formula. A curve with a known formula is referred to as a parameterized curve. For the case of the B-spline, it is a polynomial in each output variable. We can differentiate it, integrate under it. We can compute the length of any part of the curve, compute the tangent vectors and the curvature at locations. We can identify a sequence of equally spaced points on the curve. Furthermore, we used Delaunay triangulation to compute the area inside a parameterized curve. Delaunay triangulation was implemented in Mathematica. By triangulation of a planar region, we mean the region divided into disjoint triangles. When given a point sequence on the curve, this function returned the triangulation of the convex hull enclosed by the points. This can subsequently be modified to return the area inside the curve. There is a Mathematica routine to do B-splines. However, we preferred to implement the equation for B-spline directly. This gave us more control over the output. 3 Results 3.1 Image acquisition and bleb identification 3.1.1 Cortex and membrane positions were visualized using the under agarose assay In order to visualize cortex and membrane dynamics of a chemotaxing cell, we modified an under agarose assay developed by Zatulovskiy, Tyson, Bretschneider, and Kay. Briefly, starved cells were filmed as they crawled under a slab of agarose towards a source of cAMP. The cortex was visualized by labeling with LifeAct-GFP and the membrane was visualized by the shadow created by the cell against the agarose slab that contained RITC-dextran. Fig 2 shows a single time point of GFP and RITC channel images of a wild-type cell chemotaxing under a 0.5% agarose gel. LifeAct-GFP labeled the cortex as well as other F-actin structures. The cell produced a negative against the gel where the cell blocked the RITC signal. This provided an indication of the edge of the membrane where the negative ceased and the RITC signal intensified. Merging the GFP and RITC images provided cortex and membrane positions, which allowed the identification of a putative bleb as a blister-like protrusion mostly free of actin was observed. The full video of this cell can be found in S1 Video. Fig 2 The under agarose assay simultaneously visualized cortex-to-membrane positions of a putative bleb. 3.1.2 ImageJ intensity plots confirm cortex and membrane positions In order to verify that the membrane detached from the cortex, forming a bleb, the membrane and cortex positions must be identified quantitatively. To accomplish this, we used ImageJ intensity plots. Using the same time point for each channel shown in Fig 2, we simultaneously determined the positions of both the membrane and cortex quantitatively. The signals of the LifeAct-GFP and RITC were quantified along a drawn line on the images. The cortex’s position was identified by the highest GFP signal intensity peak, which occurs at approximately 1.1 microns. The membrane’s position was identified by the negative created by the cell where the edge of the cell was represented by the sharp increase in RITC signal intensity from the cell to the gel. For the membrane, a drastic increase in signal intensity was seen at approximately 2.9 microns. The merge shows the location of the membrane to the cortex as indicated by the distance, approximately 1.8 microns, between the GFP and RITC peak intensities. See S1 Fig for this method applied to an area of this cell without a bleb. Fig 3 ImageJ intensity plots quantitatively confirm membrane and cortex positions of a putative bleb. We then questioned whether we could use this method to determine cortex-to-membrane positions during bleb formation. 3.1.3 Intensity plots confirm bleb formation dynamics In order to confirm the formation of a bleb by the cell shown in Fig 2, we determined membrane and cortex positions over the course of several seconds encompassing before and after the putative bleb formation and compared that to the membrane and cortexes’ expected dynamics for bleb formation and completion. As shown in Fig 4 at T 0, the cortex and membrane were in close proximity at 1.0 and 1.3 microns, respectively. At T 1, the membrane’s sharp increase in RITC intensity shifted to 2.9 microns while the cortex peak remained in its original location; thus the membrane detached from the cortex, indicating the start of a bleb. At T 2, the membrane’s sharp increase in RITC intensity shifted slightly further to 3.3 microns where the original cortex’s peak signal lessened, representing the actin scar characteristic, and another GFP-peak at 3.1 microns was seen in close proximity to the shifted membrane, indicating that a new cortex was being assembled in close proximity to the new membrane location. At T 3, the shifted membrane moved a little further to 3.4 microns whereas the new cortex at 3.1 microns was fully assembled, and the actin scar lost its signal intensity, demonstrating that the original cortex completely dissipated. As shown, all characteristics of bleb formation were unambiguously identified by this method. To further support this method, a non-blebbing region on the same cell shows the cortex/membrane complex being maintained over the same time course. The full video of the cell can be found in S1 Video. Fig 4 ImageJ intensity plots confirmed cortex-to-membrane positions throughout bleb formation of a putative bleb. 3.2 Image processing 3.2.1 General statements A cell image refers to a sequence of microscopy images taken every 1.66 seconds for the cortex and membrane position assays and 0.800 seconds for the bleb progression assays. These images are still frames from a digital video of the cell. It is important to note that for each cell, we process stills or frames identically in all aspects. Videos of all cells presented in this letter can be found in S1 – S4 Videos. In Image Processing, we take this sequence and identify the boundary points for each still or frame. In particular, we set up a coordinate system and then identify the coordinates for the boundary points. The point sequences produced in this step are subsequently input into the geometric modeling component described in the next section. A note on what is being detected in our analysis. It is apparent we are locating the cell cortex in the GFP images. Since the membrane and cortex are usually tightly joined, in most cases we are locating the cell boundary, the membrane/cortex complex. The only exception occurs during a bebbing event. In this case, the membrane extends without any apparent supporting cortex. Generally, it takes about a second for the cortex to form at the extended membrane. Even before then, actin debris is often visibly present in the new bleb. Our process identifies this material. The result is often strangely shaped. We have learned to recognize this as a bleb in progress. The following computer functions when executed sequentially describe an automated process that renders the microscopy image as a parametrized curve.. 3.2.2 Steps toward digitization Images were first cropped using the ImageTake function. The purpose of this step was to remove extraneous nearby objects. The resolution and magnification of the images were not altered during this step. See Fig 5A and 5B. Of course all images in the sequence were cropped identically. Fig 5 Image processing: Microscopy → Digitization Flowchart. The original microscopy output. The cropped image. Only unnecessary background was removed. The result of FillingTransform. Very small dark features were blended with adjacent... The next goal was to prepare the image for the edge detection step. We wanted to produce a bi-chromatic image where the cell was white and the external matrix was black. To this end, we eliminated unwanted detail or reduced noise until the only remaining detail was the cell edge. In our setting, LifeAct-GFP was expressed in the cell to illuminate the F-actin. During image acquisition, signals produced by the labeling were visualized by using gray-scale where the highest signal of the label was white. The result was a very bright, almost white, actin cortex at the cell boundary. The interior of the cell with only isolated actin polymers was mostly a dull gray punctuated with bright specks. We implemented FillingTransform. The result was to reset the isolated dark spots to match the surrounding region. Hence, the cell interior was more uniform and more easily distinguished from the cortex. Compare Fig 5B and 5C. We used ImageAdjust to rescale the brightness to values in the unit interval. There was little visual change, see Fig 5D. This is a useful technical modification in preparation to the following steps. The final noise reduction step employed a blurring transformation, Blur. Compare Fig 5D and 5E. This transformation diminished the contrast within the cell by interpolating brightness values at each pixel using a weighted average of the surrounding pixels. This reduced isolated actin fragments. We begin edge detection by applying Binarize. The Mathematica function takes the bi chromatic image and assigns a value of zero and one to each pixel. The assignment depends on the brightness level as determined by a user set parameter. The choice of parameter is governed by the the sharpness of the image. The result was a white cell region and black background. Binarize output is illustrated in Fig 5F. The same parameter, once selected, was used for the entire cell sequence. At this point, we are nearly in position to do the edge detection. We removed anomalous artifacts that could confuse the edge detection. We did this in two steps. First we re-executed the filling transform followed by DeleteSmallComponents. This last application identified and removed small connected white regions in the black background or vice-versa. See Fig 5G and 5H. These previous two steps are often unnecessary. For our illustration, we have chosen a case where Binerize output leaves several disconnected white regions. In this case, DeleteSmallComponents removed the anomalies. We are now ready to do the edge digitization. The function EdgeDetect identifies the points at the transition between the black and white regions. See Fig 5I. The final two steps are not included in the flow chart as they do not produce visual change. PixelValuePosition introduces the coordinate axis and assigns x and y coordinates to the physical boundary point set. The resulting set was not ordered as a circuit around the cell. Rather the points are ordered lexicographically for values of. We sort the points identified by PixelValuePositions to form a boundary circuit using FindShortestTour. Often the cell shape is too complex and the FindShortestTour fails. We remedy this by separating the boundary point set, applying the function separately to each segment and then concatenating each piece to the whole. 3.3 Geometric modeling 3.3.1 B-spline fit Our goal is to parameterize the cell boundary. Of course that is impossible. Rather, we approximate the cell boundary with a parameterized curve. We begin by determining that the cell boundary is suitable for approximation by a B-spline. For this purpose, we identify two necessary assumptions. These statements will connect the mathematics to the biological observation. We will then introduce the B-spline parameterization and argue that it does parameterize the cell shape. Note that Lipschitz continuity is defined in S1 Appendix. Some of this material is necessarily technical. Assumption 1: The points returned by EdgeDetect actually lie on the cell boundary. Assumption 2: The curve formed from the cell boundary is locally Lipschitz continuous. We begin our discussion of Assumption 1 by considering the correctness of the EdgeDetect procedure. The correctness of EdgeDetect depends on the Binarize function. It assigns a value of zero and one depending on a user defined parameter which is determined using visual cues. The value 1 is assigned at and inside the cell boundary. Obviously, the parameter setting is sometimes flawed. Since we repeat the same parameter value for each still or frame associated to the cell image, then the same error is repeated at each still for the same cell. We expect that in a study using a large number of cells, the error will manifest as random variations with mean zero. Hence, the same will be true for the B-spline based on these points. For this reason, we may suppose that the EdgeDetect function is correct and adopt Assumption 1 as necessary support for the mathematics. Regarding Assumption 2, we note that the cell boundary is smooth. Indeed, the edge is formed by the membrane/cortex complex and shaped by local internal pressure. As such, it cannot form a singularity. Even at the end of filopodium, the edge seems to round over the actin extension. In particular, we do not expect a cusp on the D. discoideum edge. This leads to the assertion that each point on the boundary lies on the graph of a function f = y or g = x, and this can be done so that the derivatives satisfy ‖ f ′‖ ≤ D and ‖ g ′‖ ≤ D for some fixed constant D. This condition is necessary but not sufficient for local Lipschitz continuity. It is, however, close enough to lead us to accept Assumption 2. We proceed to fit a cubic B-spline to the sequence of boundary points. The B-spline diverges from the actual boundary no more than the error bound, Kh as computed in S1 Appendix. Here K is a constant and h is the mesh parameter, the maximum distance between successive guide points. We want a B-Spline because of the smoothness properties. In particular, a cubic B-spline is twice continuously differentiable. Hence, it is rectifiable and has well defined curvature everywhere. Furthermore, the error bound allows us to conclude that as h goes to zero, the distance between the curve and the boundary sequence goes to zero. This statement provides justification for the conclusion that the B-spline parameterizes the cell boundary. In Fig 6A, we compare the microscopy to the EdgeDetect to the B-spline versions of a cell. Fig 6 Creation of B-splines and equal arc length points. 3.3.2 Equal spaced points With parameterized representation of the cell boundary by a rectifiable curve, we are able to determine a sequence of equally spaced points on the cell edge. Points on the B-spline at equal parameter increments are not equally spaced. An equally spaced sequence can be used to regularly distribute a marker or to compute finite differences. In such a sequence of boundary points was necessary for a membrane energy function. Given a point on the B-spline, we select the next point along the curve at a preset distance δ and a maximum error ϵ. The selection is made using a binary search. In particular, given a point P i, we test points on the B-spline until we find one, P i +1 so that the distance between P i and P i +1 is between δ ± ϵ. Then we continue the process until we have completed the circuit. The algorithm is complicated as the cubic B-spline has segments. We accommodate for the B-spline segments by translating the residual distance at the segment end forward to the next segment. In Fig 6B, we see two views of a cell boundary segment. In once case, we have points at equal parameter spacing, in the other we have points at equal arc length. For instance, it is easier to compute distances along the cell boundary using the sequence of equally spaced points. In the following subsections, we illustrate the usefulness of the B-spline representation for calculating cell area, bleb area and relative curvature. In each case, there is an ongoing research project in our lab the uses these geometric procedures. 3.3.3 Calculating area We compute area by triangulating a region, dividing it into triangles and then summing the area of the individual triangles. If the region has a parameterized boundary, then we apply Delaunay triangulation to a sequence of boundary points. For instance, a sequence of regularly spaced boundary points. The Delaunay function in Mathematica returns the triangulation for the convex hull of the region defined by the points. See Fig 7A center. Fig 7 Applying Delauney triangulation to determine cell and sub cellular areas. The triangles are either interior or exterior. To remove the exterior ones, we use a procedure based on the Jordan curve theorem. For interior triangles, a line joining the center of the triangle to an interior point of the cell must cross the boundary an even number of times while the opposite is true for exterior triangles. In order to calculate the intersection of a line and the boundary we must have a parameterized representation for the cell boundary. Note that zero is an even number. We show this view in Fig 7A right. We test each triangle in turn, removing an exterior triangle each time it is encountered. When the exterior triangles are removed, we add the area of the remaining triangles to produce an approximate area of the cell footprint. Since we have used the sequence of equally spaced points, then the estimated error is easily calculated. We compute the area between the B-spline and segment joining each pair of points in the sequence. We get the error estimate by adding these values. Alternatively, we can use Green’s theorem applied to the B-spline representation of the cell boundary. In particular, if ∂ C denotes the B-spline boundary, then area is given by ∫ ∂ C x d y - y d x = 1 36 ∑ i ∫ 0 1 ⋅ d t The computed area is the same as with Delauney, only now this approach is less intuitive. However, it is no longer dependent on a built-in function and hence is more easily ported to other programming languages, for instance. if we needed to implement this geometric platform into a High Performance Computing environment. The area of a bleb is related. The bleb as a geometric object is the region between the actin scar and the membrane with newly formed cortex. As stand in for the actin scar, we use the boundary segment associated to the bleb at the prior frame. We get the area by first identifying the points between the base or shoulder points in the after image, in Fig 7B. Using the equally spaced points, we took the union of the points between a and b in the pre image and a ′ and b ′ in the post image. We show the bleb as represented in this manner. Analogous to the cell, we compute the area by triangulating the region. Note that the Green’s theorem approach applies equally well to bleb area. With this basic platform there are many more measurements that can be made. For instance, the bleb reach or farthest extent is an important measurement. To estimate this value, we could look at the circular arcs fitted to the two cell edge segments representing the pre-belb and post-bleb state. These two circular arcs terminate at the same locations. The distance between the two arc mid-points is a reasonable stand in for bleb reach. 3.3.4 Measuring curvature We want a means to measure curvature. Since the cell boundary returned by the microscopy is irregular or bumpy at the micro level, then the computed curvature values will be somewhat chaotic. Even a coherent boundary segment, one that visually appears concave or convex, will contain points in the segment that measure positive or negative depending on the presence of a micro level irregularity. Fig 8A shows the plot of the curvature values for a cell with positive curvature denoted blue and negative curvature denoted red. Even clearly convex or concave segments are not uniformly positive or negative. Furthermore, even then it is unclear what value to return as the curvature for the segment. Fig 8 Curvature and relative curvature. Another problem with the standard approach to curvature that arcs of the same circle have the same curvature. For D. discoideum the length of the circular segment matters. For a given circle a short arc appears to be flat. Such a segment may actually change from concave to convex from frame to frame, whereas a longer segment will remain convex or concave throughout the observational time period. Our approach to the problem is to fit a circle to the boundary segment. Our procedure is based on the fact that the boundary of the D. discoideum cell is formed by internal pressure. In short, it is expected to be locally circular. Next, we compute the circle arc length between the segment end points, l a, and compute the linear or Euclidean distance between the segment end points l s. We use the ratio of those two numbers to measure the segment curvature, curv seg, c u r v s e g = l a - l s l s × 100. We refer to curv seg as the relative local curvature. In Fig 8A we see that the standard curvature does not identify the segment curvature. Alternatively, relative curvature clearly identifies a concave segment. See Fig 8B. We were successful in reproducing the results of. This does not mean that the computed curvature values are incorrect or useless, only that they are not useful to identify the tendency of segments of the cell boundary. 3.3.5 Classifying blebs by relative local curvature To illustrate our concept of relative local curvature, we applied it to the problem of classifying blebs according to the curvature of the boundary at the bleb site. We saw results very similar to. In this way, we confirmed our software. Based on relative local curvature, we classified segments into three categories: Convex, Concave and Low Curvature. Relative local curvature values for concave segments carry a negative sign to distinguish them from convex segments. Since smaller absolute values indicate segments are flatter, a threshold of ± 0.005 was used to classify low curvature segments. We used this scheme to categorize segments that bleb in the next frame. We justified the use of a low curvature classification as segments in this range were often slightly convex or concave at one frame and slightly concave or convex at the next. Percentage of blebs occurring in each segment type is given in Table 1, row 1. The total number of cells in this study was 42 with 104 blebs. Table 1 Bleb distribution: Wild type under 0.7% agarose. In order to get an approximation of the proportion of segments falling under each category, we looked at randomly selected segments from 35 of the cells as shown in Table 1 row 2. Each random segment had the same arc length as a randomly selected bleb. It was selected from a randomly chosen cell/frame. Table 1 shows the percentage of blebs and random segments belonging to each category. The cells included were wild type and moving under 0.7% agarose. Note that the random segment data reflect the geometry of the cell. Statistically, the cutoff of ±0.005 was significant with p = 2.913 e −5. The histogram included in Fig 9A shows clearly that most blebs occur at boundary segments with low negative curvature. The mean relative curvature for concave blebbing segments was −0.09 with standard deviation of 0.11. To intuitively understand these relative curvature values, in Fig 9B we show curves with relative curvature −0.09 and mean plus 1 standard deviation, −0.2. Fig 9 Relative curvature and blebbing. The data confirms the work of that blebs are more likely to occur in concave segments even though there are fewer concave segments. As noted in, this is a consequence of Young-Laplace equation relating curvature and force. Furthermore, the statistical analysis justifies the use of the three edge segment categories defined by the cutoff ±0.005. 4 Discussion/Conclusion We have advanced current techniques to analyze images of the cell cortex and plasma membrane during blebbing. Through the use of a semi-automated computer application, we have created a firm foundation for our geometric modeling tools. Our technical platform uses accessible software packages ImageJ and Mathematica. Both programs allowed us to answer a variety of biological questions requiring precise measurements of geometric properties of cells. Using D. discoideum as our model organism, we were able to monitor and confirm bleb initiation through quantitative measurements of the location of the membrane and the cortex. Using our geometric techniques, we accumulated comprehensive measurements of the curvature of the membrane and cortex throughout bleb formation. From these measurements, we can further investigate bleb characteristics such as bleb area, size, and shape. This provides the tools necessary for further studies, such as cortex tension and membrane energy. Our methods are not limited to blebbing, but can answer questions regarding cytoskeleton and membrane dynamics in fixed or live cells from actin stains and/or lipid stains. Furthermore, our methods can shed insight into the dynamics of pinocytosis, endocytosis, phagocytosis, and vesicle trafficking by determining the amount of curvature the membrane must endure to initiate these tasks. In the same vein, actin-based structures can be analyzed as well such as the dynamics of the cortex, curvature of filopodia, curvature and area of pseudopodia and lamellipodia, and the shape of endocytic cups. Lastly, our methods facilitate measuring cells on a whole-cell level as well as taking measurements of a region of interest in a cell. Thus, our methods are ideal for those wishing to address biological questions using geometric analysis as these programs are routinely developed from available and accessible software as described. Given that precise measurements and accurate representations of cellular structures are critical first steps for creating realistic mathematical models, our biological/mathematical interface is carefully justified. Hence, we provide fundamental techniques that can improve the quality of many models of various cellular processes. Supporting information S1 Fig ImageJ intensity plots quantitatively confirm membrane and cortex positions of a region without a bleb. Using the same frame of the cell in Fig 2, intensity plots of the signals along the drawn line for each channel show that in a region without a bleb, the membrane and cortex are observed to be in close proximity. Cortex and membrane positions are indicated by and, respectively. Click here for additional data file. S2 Fig ImageJ intensity plots confirmed the sustained cortex-to-membrane complex in a region without a bleb over time. Using the same frames of the cell in Fig 4, intensity plots were made of a region where there was no bleb. Merges of GFP and RITC time points with their respective intensity plots confirmed a sustained cortex-to-membrane complex over time. Cortex and membrane positions are indicated by and, respectively. Click here for additional data file. S3 Fig A bleb was identified through actin debris under 0.5 percent agarose. Top row shows the frame before the bleb, and the bottom row shows the frame with the bleb in progress, identified by the actin debris present in the bleb. Left, in the GFP channel, the white arrow indicates the region where the actin debris will be present in both time frames. Center, the RITC channel shows membrane position in both frames with the bleb region present in the second time frame. Right, the merge between both GFP and RITC channels false colored green and red, respectively. Images were taken on the 100x objective. Click here for additional data file. S4 Fig A bleb was identified through actin debris under 0.7 percent agarose. Top row shows the frame before the bleb, and the bottom row shows the frame with the bleb in progress, identified by the actin debris present in the bleb. Left, in the GFP channel, the white arrow indicates the region where the actin debris will be present in both time frames. Center, the RITC channel shows membrane position in both frames with the bleb region present in the second time frame. Right, the merge between both GFP and RITC channels false colored green and red, respectively. Images were taken on the 80x objective. Click here for additional data file. S5 Fig A bleb was identified through actin debris under 0.7 percent agarose without RITC-Dextran. Left, the frame before the bleb. Center, the frame with the bleb in progress, identified by the actin debris present in the bleb. Right, the next frame showing the cortex reforming in the bleb. Images were taken on the 100x objective. Click here for additional data file. S1 Video Microscopy video of Figs ​ Figs2 2 – 4 ’s cell. This wild-type cell expressing Life-Act-GFP crawled upward a cAMP gradient under a 0.5 percent agarose gel laced with RITC-Dextran. The exposure of the GFP and RITC channels were 0.800 and 0.122 secs, respectively. However, due to the microscope’s limitations in the speed of changing channels, the lowest frame rate achievable was 1.66 secs. Click here for additional data file. S2 Video Microscopy video of Fig 5 ’s cell. This wild-type cell expressing LifeAct-GFP crawled upward a cAMP gradient under a 0.7 percent agarose gel without RITC-Dextran to visualize bleb progress after nucleation. With this assay, the frame rate for this was 0.800 secs. This lowered frame rate allowed for observing bleb progression over time via the cytoplasm with labeled via residual F-actin LifeAct-GFP labeled debris filling the bleb. Click here for additional data file. S3 Video Microscopy video of Figs ​ Figs6A 6A and ​ and8’s 8 ’s cell. Another wild-type cell expressing LifeAct-GFP crawled upward a cAMP gradient under a 0.7 percent agarose gel without RITC-Dextran. The framerate was 0.800 secs. Click here for additional data file. S4 Video Microscopy video of Figs ​ Figs6B 6B and ​ and7’s 7 ’s cell. Another wild-type cell expressing LifeAct-GFP crawled upward a cAMP gradient under a 0.7 percent agarose gel without RITC-Dextran. The framerate was 0.800 secs. Click here for additional data file. S1 Appendix Statement and proof of a theorem that in effect states that the B-spline gives a good approximation of the cell cortex. More technically, we prove that as we add more guide points on the cortex, the resulting B-spline better approximates the cortex curve. Click here for additional data file. 