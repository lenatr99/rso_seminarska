 In this work, we established, validated, and optimized a novel computational framework for tracing arbitrarily oriented actin filaments in cryo-electron tomography maps. Our approach was designed for highly complex intracellular architectures in which a long-range cytoskeleton network extends throughout the cell bodies and protrusions. The irregular organization of the actin network, as well as cryo-electron-tomography-specific noise, missing wedge artifacts, and map dimensions call for a specialized implementation that is both robust and efficient. Our proposed solution, Struwwel Tracer, accumulates densities along paths of a specific length in various directions, starting from locally determined seed points. The highest-density paths originating from the seed points form short linear candidate filament segments, which are further scrutinized and classified by users via inspection of a novel pruning map, which visualizes the likelihood of being a part of longer filaments. The pruned linear candidate filament segments are then iteratively fused into continuous, longer, and curved filaments based on their relative orientations, gap spacings, and extendibility. When applied to the simulated phantom tomograms of a Dictyostelium discoideum filopodium under experimental conditions, Struwwel Tracer demonstrated high efficacy, with F1-scores ranging from 0.85 to 0.90, depending on the noise level. Furthermore, when applied to a previously untraced experimental tomogram of mouse fibroblast lamellipodia, the filaments predicted by Struwwel Tracer exhibited a good visual agreement with the experimental map. The Struwwel Tracer framework is highly time efficient and can complete the tracing process in just a few minutes. The source code is publicly available with version 3.2 of the free and open-source Situs software package. Keywords: cryo-electron tomography, segmentation, filament tracing 1. Introduction Shape, motility, and transport within a eukaryotic cell are based on an extensive actin cytoskeleton. To visualize actin filaments in their native state, researchers commonly employ cryo-electron tomography, a specialized imaging technique that enables 3D insight into the internal cellular structure. Cryo-ET has recently shown that actin filaments provide a “missing evolutionary link” between Archaea and complex eukaryotic life forms, such as animals and plants. The cryo-ET by Pilhofer’s lab at ETH Zurich supports an emerging hypothesis that extensive cytoskeletal actin structures arose first in the Asgard Archaea, before the appearance of the first eukaryotes on Earth, and could, therefore, have contributed to the emergence of complex organisms. Moreover, the observed cytoskeletal protrusions in the Archaea suggest a detailed mechanism for eukaryogenesis, in which a primordial Asgard archaeon interacts with the predecessor of the bacterial endosymbiont by means of the actin-powered protrusions and eventually endogenizes it. Cryo-ET involves capturing a series of 2D images of a specimen at extremely low temperatures, preserving its frozen state while maintaining its hydrated environment. This enables detailed imaging of actin filaments without disrupting their native structure. These 2D projections are subsequently aligned using various computational techniques, collectively referred to as 3D reconstruction, to generate the 3D tomogram. The 3–5 nm-resolution tomograms obtained by cryo-ET typically present considerable noise, induced by the limited electron dose used in the image acquisition, and they exhibit directional artifacts from the absence of certain view directions, caused by the limited tilt range of the specimen holder in the microscope. Determining the organization of actin filaments is highly important as they are responsible for a variety of cellular processes, such as muscle contraction, transport, and cell motility, and therefore, it can aid in characterizing experimental, dynamic, or pathological changes in the cytoskeleton. Actin filaments are thin and flexible. They assemble to form diverse organizational patterns, from hexagonal closely packed bundles in the shaft of hair cell stereocilia, to directionally biased semi-ordered strands in the stereocilium taper region, to irregular, randomly oriented actin networks in filopodia. The three types of actin organization can be likened to the appearance of a person’s hair in various stages of tidiness, and each type requires specialized algorithms for their computational interpretation. Our recent algorithm development was mainly focused on ordered or semi-ordered patterns in stereocilia, where filaments form strands with a mean direction that can be exploited in directional denoising or deconvolution. In many cells, however, such as in the ancestral Archaea, the filaments are randomly oriented and form highly irregular networks, which defy any directionally biased denoising approaches. In this work, we present a novel approach, Struwwel Tracer, to quantitatively organize such important disorganized actin networks. The presence of noise, artifacts, and other structures, such as actin-binding proteins, can obfuscate the filaments and make the tracing difficult. Distinguishing true filaments from noise or other structures in tomograms requires careful examination and expertise, which ultimately make manual tracing of actin filaments a labor-intensive task that requires significant time and effort. In addition, manual tracing is often subjective in nature and relies heavily on the annotator’s interpretation. The reliability and reproducibility of the annotation procedure are greatly compromised by factors such as low contrast, various types of artifacts, and inherent uncertainty. This is particularly evident when the procedure is applied directly to whole-cell tomograms with typical resolutions below 2 nm and varying in orientation due to the missing wedge effect. Moreover, when dealing with large datasets containing 2D image stacks, the repetitive nature of the annotation task increases the chance of error, such as an inadvertent skipping between neighboring filaments. To mitigate these potential errors and to make the tracing objective and reproducible, it becomes necessary to develop automated approaches that can be independently validated. Over the years, a number of automatic methods have been developed to trace actin filaments ; however, the existing methods have certain limitations: A significant portion of these approaches can be ruled out for the present work because they are only applicable to non-actin filaments such as microtubules and polysaccharides, or to actin filaments observed in relatively clean light or confocal microscopy images. Among the cryo-ET-related actin tracing methods, some are only applicable for the tracing of well-ordered filaments. Among these, one noteworthy tool is our Spaghetti Tracer approach. Spaghetti Tracer introduced a paradigm shift in the tracing of semi-regular actin filaments because it is a dynamic-programming-based method at the voxel level that does not require an expensive missing wedge correction, template convolution, or deconvolution. Therefore, it yields a substantial improvement in time efficiency over template convolution or deconvolution methods, enabling fast and accurate tracing of such filament arrangements. The success of Spaghetti Tracer motivated us to extend its capabilities to randomly oriented actin filaments in the present work. There are very few earlier algorithms that are agnostic of the relative orientations and distances of the actin filaments, so that they can trace central lines of irregular filaments individually without leveraging the information of adjacent filaments or requiring a mean direction. Volume Tracer utilized an expensive genetic-algorithm-based search employing a population of cylindrical templates to detect randomly oriented filaments in Dictyostelium discoideum filopodia. The genetic algorithm was implemented as part of our group’s free, open-source Situs and Sculptor packages, but it required extensive computational time on the order of several days when applied to a complete tomogram, without guaranteeing convergence. Co-author Rigort also developed a similar template-matching method independently. This approach was implemented in Amira, a commercial software requiring a paid license and limiting any algorithmic modifications by third parties or end users. Recently, a number of deep-learning-based approaches have been proposed for the segmentation of diverse biological assemblies, including actin. For example, Chen et al. presented a deep-learning-based segmentation approach for a voxel-level classification of shapes of interest in the tomogram and integrated the approach into the EMAN2 package. However, these segmentation tools are generic in nature and are not specifically designed for filamentous shape structures. Besides, they require users to annotate training data and fine-tune the deep learning model, which could be a laborious process. These segmentation approaches only provide a voxel-level density segmentation, without any tracing of central lines. Recent studies that used these segmentation methods subsequently required separate approaches, such as the above template matching, for the additional tracing. In summary, the current state-of-the-art of identifying actin filament networks in cryo-ET has several drawbacks, including the fragmentation of tools and packages, the prerequisite to buy commercial software, complex manual interventions, and computational expense. Our newly proposed approach, demonstrated in Section 2, can address all these drawbacks. Struwwel Tracer is an efficient, accurate, free, open-source tool for tracing randomly oriented filaments in actin networks. We describe in in Section 3 how the framework first detects local seed points in the map, from which it generates short candidate filament segments. Next, path densities are accumulated by exploring all potential filament paths within 45 ∘ search pyramids from the x, y, and z directions. After placing CFSs across the map based on the maxima of path densities, we describe in Section 3 how a manual segmentation can be efficiently performed by visualizing an intermediate “pruning map” in a third-party molecular graphics program. Finally, the surviving CFSs are iteratively fused into longer, curved filaments based on their relative orientations and gap spacings after extension. Figure 1 Overall flow diagram of Struwwel Tracer as described in Section 3. 2. Results and Discussion To evaluate the performance of Struwwel Tracer, a comprehensive statistical F1-score analysis was performed on simulated tomograms of a Dictyostelium discoideum filopodium with a known ground truth. Different levels of noise were added to simulate realistic imaging conditions. Additionally, the effectiveness of Struwwel Tracer was demonstrated on an experimental tomogram of a mouse fibroblast lamellipodium that was interpreted for the first time by filament tracing. Finally, we report the implementation details and computation times of our software. 2.1. Statistical Evaluation of Tracing Accuracy in Simulated Tomograms In earlier work, we established a rigorous statistical evaluation protocol for testing the accuracy of filament-tracing approaches. This protocol is based on simulated phantom tomograms that we generated from known filament traces under realistic conditions that matched the noise profile and missing wedge properties of an experimental tomogram. To evaluate Struwwel Tracer, we computed the precision, recall, and F1-scores based on the observed agreement. The ground truth filament voxels of simulated Dictyostelium discoideum filopodium maps were compared with the filament voxels predicted by the tracing. Due to the inherent high noise levels present in cryo-ET images, previous studies have highlighted the limitations of conducting one-to-one voxel-level comparisons between the ground truth and predictions. Therefore, here, we used a more-pragmatic approach; rather than direct voxel-level comparison, we performed the comparison based on a neighborhood range of three voxels. The true positive, false positive, and false negative voxels were then computed in the following way: True positive: If a ground truth filament voxel is found within a 3 × 3 × 3 -voxel neighborhood of a predicted voxel, it is considered a TP. False positive: If no ground truth voxel is found within a 3 × 3 × 3 -voxel neighborhood of a predicted voxel, it is considered an FP. False negative: If no predicted voxel is found within a 3 × 3 × 3 -voxel neighborhood of the ground truth voxel, it is considered an FN. The recall, precision, and their harmonic mean are then computed according to R = T P T P + F N, P = T P T P + F P, F 1 = 2 ∗ R ∗ P R + P. Table 1 presents the precision, recall, and F1-scores obtained by Struwwel Tracer in simulated tomograms with varied levels of noise. Struwwel Tracer achieved a high F1-score of 0.90 when applied to the lowest-noise map we tested. The high precision score of 0.97 indicated that the framework recognized mostly true filaments in the simulated tomogram. As the noise level increased, the performance degraded a bit due to the slightly lower recall values ; however, the obtained F1-scores still remained above 0.8. Given the inherent noise in the tomogram, the recall scores ranged slightly below the precision scores since missing filaments’ densities resulted in FNs. Table 1 A performance comparison of the proposed Struwwel Tracer approach for simulated tomograms of a Dictyostelium discoideum filopodium at various noise levels. Nevertheless, the observed F1-scores ranging from 0.85 to 0.90 presented a remarkable level of accuracy for a density-based structure prediction. For comparison, we achieved much lower F1-scores of 0.72 for alpha helices and 0.65 for beta sheets in a recent state-of-the-art deep learning prediction of secondary structure features in cryo-electron microscopy maps. The high Struwwel Tracer F1-scores were only slightly below those observed earlier with Spaghetti Tracer on much-more-ordered actin filaments. Figure 2 The simulated tomograms used in this study and the corresponding Struwwel Tracer predictions. The simulated tomograms are shown at the following noise levels as EMD-11870. This specific map has not been computationally traced due to their focus on Arp2/3 protein branch junctions in, so a measurement of actin center lines could provide complementary information to the paper.. Since this was a previously untraced map and we did not have any ground truth, we provide in Figure 3 a visual comparison to demonstrate the excellent agreement between the density and the predicted filament center lines. EMD-11870 is a larger tomogram that contains randomly oriented and branched actin filaments. For our demonstration in Figure 3 A, we selected a 312 × 320 × 20 sub-region of the tomogram in which filamentous patterns of actin can be clearly appreciated. The Struwwel Tracer prediction results are illustrated in Figure 3 B,C. Figure 3 A 312 × 320 × 20 subtomogram cropped from EMD-11870 map indices i = 100–411, j = 200–519, and k = 74–93. The isocontour level in the rendering is 0.4518. The... 2.3. Computation Time and Manual Intervention In terms of computational efficiency, Struwwel Tracer demonstrated outstanding performance, surpassing the earlier tracing method by several orders of magnitude in speed. On an Apple MacBook Pro equipped with a 2.6-GHz Intel Core i7 processor, we observed that, for a simulated tomogram of size 200 × 200 × 71 voxels, Struwwel Tracer took approximately three minutes of runtime. Given the ongoing developments in cryo-ET, it is expected that hundreds of tomograms can soon be acquired within a few days. Struwwel Tracer would be able to match this processing speed. In addition, the proposed method does not require extensive manual intervention, which is the case for interactive and deep-learning-based tools for which users either need to tune many parameters or label training data and train the model for prediction. For the Struwwel Tracer approach, user intervention is needed only once in the CFS segmentation step to select an approximate value of the threshold in the pruning map. This requires opening the pruning map in visualization software and takes at most a few minutes. 2.4. Software Implementation and Dissemination The newly developed Struwwel Tracer approach is set to be seamlessly integrated into version 3.2 of Situs,a widely used, open-source software package for biological image interpretation. Struwwel Tracer will be disseminated with Situs Version 3.2 as a new command line tool named strwtrc. To ensure full compatibility with Situs, strwtrc was implemented using C/C++, the primary language of Situs. A notable advantage of strwtrc is that it does not rely on any third-party libraries, making it self-contained and efficient. Moreover, strwtrc is fully compatible with both the Linux and MacOS operating systems. In addition, strwtrc was designed to be user friendly and accessible, requiring minimal programming language proficiency and no prior coding experience. We intentionally kept the number of user-defined parameters to a minimum, making it easier for users to operate the software. The default parameters were designed to work well for most cases; however, it is important to note that they may not be optimal for every possible dataset. A summary of all parameters is shown in Table 2. A comprehensive user manual and tutorial will be included with the Situs package to guide users through the individual stages of the approach. Table 2 Command line parameters of the strwtrc program implemented in Situs and corresponding stages of the approach. 3. Materials and Methods Filaments in an irregular actin network, such as those found in filopodia, lamellipodia, or stress fibers, are particularly challenging to trace due to their arbitrary orientation and potential overlap or branching with other filaments. We report in the following how simulated phantom tomograms were generated from ground truth traces to provide a controlled basis for our method development and validation. Subsequently, we describe the stages of the proposed tracing framework, shown in Figure 1, to address such challenges in the tracing of actin filaments with arbitrary orientations. 3.1. Simulated Phantom Tomograms In our previous work, we introduced TomoSim, a tomogram simulation approach that leverages pre-existing filament traces to generate authentic phantom tomograms, whose noise color, strength, and missing wedge were matched to experimental tomograms. In this study, we extended our simulation method to address the random orientations of the filaments. To establish a reliable benchmark for validating Struwwel Tracer, we utilized actin traces of a Dictyostelium discoideum filopodium. A spline interpolated from the filament trace in Supplementary Data 5 from Rusu et al. was volumized using a Gaussian filter with a full width at half maximum of 9 nm with a voxel spacing of 1.912 nm. As elaborated in our previous work, the simulation of a tomogram aims to replicate the noise and missing wedge artifacts typically encountered in experimental maps. The simulated tomogram does not incorporate non-filamentous biological features, such as membranes. Consequently, the simulated tomogram serves as a well-defined ground truth specifically tailored to assess the accuracy of any filament-tracing framework. We used an experimental tomogram obtained from Supplementary Data 2 from Rusu et al. for noise–color modeling and signal-to-noise ratio calibration. A wedge was masked in the frequency domain to emulate a tilt range of ± 45 ∘. Using the color-matched noise profile, we matched the signal strength to the experimental tomogram’s SNR. We used this as the basis for testing our tracing against a range of noise levels. Noise levels were quantified as the noise intensity ratio relative to the experimental tomogram. For example, a noise level of 0.5 would have half the noise intensity of the experimental tomogram and twice the SNR. The experimental map we used for the calibration was the raw tomogram prior to any denoising or local normalization. Therefore, a noise level of 1.0 is a worst-case scenario that is not encountered in tracing practice. To simulate the effect of the missing denoising step, we generated a range of five equally spaced noise levels from 0.35 to 0.95, as normalized by the worst-case level. Note that the absolute noise scale in simulated tomograms is not strictly defined anyway because of the hidden misalignment of unknown true filament densities with the prescribed ground truth traces.. 3.2. Automatic Seed Selection The detection of filaments in cellular tomograms is initiated from suitably chosen high-density seed points. Manual filament tracing relies on user-provided seed points, which were considered as the ground truth in previous work. However, due to the labor-intensive tagging, such manual seed point selection is relatively sparse and introduces uncertainty and a subjective bias, which we wished to avoid. An automated approach is less concerned with the expense of the selection and can consider a denser oversampling of potential seed points, but it might introduce false positives. Therefore, instead of considering seed points as the definitive ground truth, we utilized them solely as starting points for the CFSs, which will be screened and refined later. For an automatic seed point selection on a 3D grid, we identified high-density voxels within a local neighborhood. To achieve this, the tomogram was sub-partitioned into non-overlapping 3D cubes along each axis. The voxel with the highest density value within each cube was then designated as a seed voxel. In semi-regular filaments, the cube side length was chosen to be identical to the CFS length l in the CFS creation stage, which provides a natural length scale for the coarse-grained seed placement. However, in irregular actin networks, we expected the final seeds to be more irregularly distributed in the search cubes, so a denser sampling with a grid spacing of l / 2 was implemented in Struwwel Tracer. For this research, we used a CFS length of l = 10 voxels, resulting in seed search cubes of dimensions 5 × 5 × 5 voxels.. We assumed that seed points with local high density are necessary, but not sufficient prerequisites for true filaments. Identifying true seed voxels is difficult at this stage. This difficulty arises from the low SNR and the presence of missing wedge artifacts or other structures in tomograms. The determination of whether a density segment that originates in a seed belongs to a filament or not is performed in a later stage of the approach. Consequently, we refer to the short filament segments originating from a seed voxel not as predicted filament segments, but as candidate filament segments. 3.3. CFS Creation This stage of the approach comprises two sub-steps, CFS generation and CFS refinement. 3.3.1. CFS Generation A CFS originates in the seed voxel and terminates in the end voxel, which is determined for each seed by the following equations. The length l of the CFS in this study is user defined and is equivalent to the infinity norm of the resulting CFS vector, l = m a x. As mentioned previously, we used a value of l = 10 voxels in this paper. On a cubic grid, let the local density at each voxel D be globally normalized to a range of 0 to 1. Three separate path densities, denoted as P D x, y, z, are initialized at the seed voxel for the three Cartesian x, y, and z axes: P D x, y, z = D These path densities are then accumulated for each Cartesian axis over l voxels in the forward direction within the search pyramids that have the seed as the vertex and can deviate by up to 45 ∘ from the corresponding axis. The search pyramids, shown in green, red, and blue in Figure 4, will be formally defined below. The pyramidal search approach was inspired by the Spaghetti Tracer algorithm. However, unlike the earlier method, which was focused on a single dominant direction, we made no assumption about CFS directionality in the present work. Therefore, three Cartesian search pyramids will be combined in the following, to cover all possible orientations. Figure 4 Pyramidal density search regions along different axes based on Equation, Equation, and Equation, starting from the seed voxel at position. For a clearer illustration, we used a CFS length... At each intermediate voxel within a search pyramid, the corresponding path density ) is then accumulated from up to nine contributing neighbor voxels from a previous cross-section. To illustrate this, when tracing in the y direction, the path density P D y is accumulated from the preceding y -slice, j ″ − 1 by mathematical induction. The accumulation scheme is applied to all intermediate voxels within the search pyramids: P D y = D + max m, n ∈ P D y. Note that only neighbors m, n ∈ within the search pyramid are considered. Therefore, as described in, the accumulation zone from the seed to the final endpoint is actually an intersection of two overlapping pyramids, i.e., path densities are accumulated only in a relatively localized region. Similarly, P D x and P D z are accumulated in their respective directions, with indices permuted accordingly: P D x = D + max m, n ∈ P D x, P D z = D + max m, n ∈ P D z. The final forward path densities for the green, red, and blue search pyramids in Figure 4 are then computed on the forward-facing square bases of the pyramids: F P D x = max j − l ≤ j ′ ≤ j + l k − l ≤ k ′ ≤ k + l P D x, F P D y = max i − l ≤ i ′ ≤ i + l k − l ≤ k ′ ≤ k + l P D y, F P D z = max i − l ≤ i ′ ≤ i + l j − l ≤ j ′ ≤ j + l P D z. The F P D values in Equations – range from 0 to l + 1. For the segmentation in the next stage of the algorithm, we divided the maximum between the three F P D values by l + 1 to obtain a single normalized N P D value, which ranges from 0 to 1: N P D = max u ∈ F P D u l + 1. The combined 3D search region accounts for all possible filament orientations. The final endpoint of the CFS is then defined as the point that exhibits the maximum F P D u, according to the winning u axis that defines the N P D in Equation. The path-based density accumulation addresses the challenge posed by the substantial noise levels in the tomogram. Rather than solely focusing on the density of individual voxels or on density measurements along predetermined axes, the algorithm aims to detect an elongated high-density path with a specific infinity norm l and an orientation determined by the maximum attainable path density. 3.3.2. CFS Refinement The forward CFSs were subjected to an additional screening step based on backward tracing. From the end point of each forward CFS, a backward CFS with new end points was constructed by applying the above tracing algorithm in reverse. It was expected that, for a high-density CFS that is part of a true filament, the backward tracing will follow a comparable path in the reverse. Conversely, forward and backward CFS characterized by low density or noise, which are unlikely to be part of any filament, would diverge from each other. To determine the similarity of paths between forward and backward tracing, the angle between the points,, and was calculated, and a fixed angle threshold of 20 ∘ was employed to screen out inconsistent forward and backward CFSs. An example of the intermediate results after the refinement stage is shown in Figure 5. The surviving CFSs exhibited the preferred orientation of filaments in the actin-rich interior of the cell, whereas the exterior of the cell yielded unstructured CFS patterns, which were not true filaments and will need to be filtered out in the following. Figure 5 Density map of the simulated Dictyostelium discoideum filopodium tomogram at a noise level of 0.50. Note that the cell membrane was not simulated. Filament segments of length... 3.4. CFS Segmentation Figure 5 B illustrates the segmentation problem in the irregular actin networks, which are the focus of this work. In earlier work on ordered actin filament bundles, we found that it was possible to screen out spurious CFSs using an automated binning method that finds a suitable N P D threshold above which the CFSs remain contained in the true filament region. CFSs with N P D values below this threshold were then eliminated automatically. We propose here to use a similar N P D threshold segmentation. However, irregular actin network CFSs exhibit low N P D contrast, and we did not assume that irregular networks are localized in a specific region. Therefore, it would be desirable to fine-tune the threshold as a continuous parameter instead of prescribing discrete bin values. We implemented a novel way to allow users to perform such a continuous thresholding quickly and conveniently with a third-party molecular graphics program such as VMD, Sculptor or UCSF Chimera. Our approach outputs a so-called “pruning map”, which contains the N P D values masked by the CFS locations. Voxels in close proximity to the CFSs are assigned the N P D value ) of the CFS. When a voxel can draw N P D values from multiple CFSs, the highest value is retained. In Figure 6, the pruning map returned by Struwwel Tracer is shown at different isocontour levels. By adjusting the level in the histogram window, users can visually determine the threshold in the pruning map that represents likely filament segments. An overly low threshold would result in numerous false positives, whereas an overly high threshold would lead to a significant number of false negatives. Visual examination indicates that the isocontour values within the range depicted in Figure 6 C,D are likely to represent the filaments accurately. Note that the subsequent steps of the algorithm are not very sensitive to the selected threshold value because of the screening and gap filling that still follow. The main purpose of the visual segmentation was to suppress spurious filaments, as is shown in Figure 6 A, so a reasonable guess of the threshold parameter suffices in practice. Figure 6 Pruning map of the simulated tomogram in Figure 5 A at different isocontour levels: 0.40, 0.45, 0.50, 0.55, and 0.60. 3.5. CFS Fusion In the filament-fusion stage, we employed multiple geometric strategies to combine short, linear CFSs into curved, longer filaments. To account for the irregular organization of actin networks, the following fusion steps were specifically designed for Struwwel Tracer and were different from the collinearity test we developed earlier for oriented filaments. 3.5.1. Fusion Based on Physical Proximity The initial fusion step considers the relative spacing and orientation of neighboring CFSs. Adjacent filaments that exhibit similar orientations will be connected. We determined if two adjacent CFSs overlap or touch each other based on their spacing along the center lines of the CFSs. CFSs that meet the criteria are combined by connecting the end point of a CFS to the starting point of the successive CFS. Since it is not required that two CFSs exhibit perfectly matched orientations and positions before they are merged, we smoothed the center line of the fused CFSs by sampling, interpolation, and the removal of redundant points. 3.5.2. Fusion by Extension In addition to the proximity fusion of short CFSs, we tested whether a one-time extension of CFSs by a length l can extrapolate CFSs such that they make contact with another CFS using the same angle and spacing criteria. The extension step aimed to fill up any noise-induced gaps present in the filaments. Due to the high noise levels and missing wedge artifacts in the tomograms, it is possible that true filaments exhibit regions of density at the level of the noise, which may be excluded by a high threshold during the visual inspection of the pruning map. We, therefore, examined whether the one-time extension by a length l can help to fuse more CFSs. Similar to the previous step, we smoothed the center lines of fused CFSs by sampling, interpolation, and the removal of redundant points. 4. Conclusions The release of Struwwel Tracer is the capstone of several years of development effort on actin filament tracing that extends and completes our set of efficient solutions for hexagonal, closely packed bundles and semi-regular bundles with a dominant direction to irregular networks of randomly oriented actin filaments. Struwwel Tracer also completes the paradigm shift we began with Spaghetti Tracer, when we first used a dynamic-programming-based method at the voxel level that does not require an expensive missing wedge correction, template convolution, or deconvolution. Therefore, both Spaghetti Tracer and Struwwel Tracer yield a substantial improvement in time efficiency over earlier template convolution or deconvolution approaches. This development was guided by a rigorous optimization of the performance using a statistical F1-score analysis enabled by simulated phantom tomograms. The proposed framework incorporates a directional path search in all three Cartesian directions to ensure a comprehensive coverage of filament orientations. The algorithm identifies the path with the highest density, generating short filament segments, which are subsequently combined to form the final filament traces. The evaluation using F1-scores on simulated tomograms proved the algorithm’s high efficacy in filament tracing. Visual inspection of the results further confirmed its agreement with experimental tomograms. Our approach is robust and fast, works with simple parameter settings, and can deliver a comprehensive performance on simulated and experimental datasets. Moreover, in contrast to deep-learning-based approaches that rely on substantial processing power, such as dedicated GPUs, the implementation in the Situs package does not necessitate such resources. It can seamlessly operate on any conventional laptop or desktop computer with a standard CPU. In addition to the high efficacy in tracing, the proposed framework is also robust as it is, in principle, capable of tracing various types of filaments, whether they are randomly oriented networks or regular. We note, however, that our earlier tools have unique features that were optimized for their specific applications. A comprehensive F1-score comparison of various tools and conditions could be performed in a future review. As the study of the actin cytoskeleton is of increasing importance in biology, the proposed tool will become useful to structural biologists in need of free, open-source software solutions. Although this manuscript focused primarily on the computational aspects of actin filament tracing, the developed framework can be applied by any experimental lab to newly acquired experimental tomograms of the actin cytoskeleton. Functionality for measuring actin filament length distributions and the angles between filaments, and for labeling branch junctions, can be included in future work. 